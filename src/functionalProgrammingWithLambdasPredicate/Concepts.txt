In our earlier example, we created a simple functional interface to test an Animal trait:

public interface CheckTrait {
 public boolean test(Animal a);
}

You can imagine that we’d have to create lots of interfaces like this to use lambdas. We
want to test animals, plants, String values, and just about anything else that we come
across.

Luckily, Java recognizes that this is a common problem and provides such an interface
for us. It’s in the package java.util.function, and the gist of it is as follows:

public interface Predicate<T> {
 public boolean test(T t);
}

That looks a lot like our method. The only difference is that it uses type T instead of
Animal. As you may remember from your OCA studies, this is the syntax for an interface
that uses a generic type. 